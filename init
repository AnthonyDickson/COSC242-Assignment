# Create dirs
echo "Creating directories.."
mkdir out
mkdir test
mkdir test/src
mkdir test/out
echo "Done."

# Create files
# Create test new
f=test/new
echo "Creating $f.."
if [ ! -f $f ]; then
	touch $f

cat >$f <<EOF
if [ -z "\$1" ]
	then
	echo "Usage: new-test <name>"
	exit
fi

touch test/src/\$1-test.c
EOF
fi
echo "Done."

# Create test run
f=test/run
echo "Creating $f.."
if [ ! -f test/run ]; then
	touch $f

cat > $f << EOF
[ -z "\$1" ] && echo "Usage: test/run <test_name>" && exit
echo "Running test \$1.."
gcc -o out/\$1-test test/src/\$1-test.c *.c
time valgrind --leak-check=full -q out/\$1-test > test/out/\$1-test.txt
EOF
fi
echo "Done."

# Create test diff
f=test/diff
echo "Creating $f.."
if [ ! -f $f ]; then
	touch $f

cat > $f << EOF
if [ -z "\$1" ] || [ -z "\$2" ]; then
	echo "Usage: \$0 <file_1> <file_2>"
	exit
fi

if [ ! -f test/out/\$1-test.txt ] || [ ! -f test/out/\$2-test.txt ]; then
	echo "Test output files not found."
	echo "Make sure the tests have been run first."
	exit
fi

diff test/out/$1-test.txt test/out/$2-test.txt
EOF
fi
echo "Done."

# Create test compare
f=test/compare
echo "Creating $f.."
if [ ! -f $f ]; then
	touch $f

cat > $f << EOF
if [ -z "\$1" ] || [ -z "\$2" ] || [ -z "\$3" ]; then
	echo "Usage: \$0 <test_name_1> <test_name_2> <test_input_file>"
	exit
fi
echo "running test \$1..."
test/run \$1 < \$3
echo "running test \$2..."
test/run \$2 < \$3
echo "diffing tests \$1 and \$2..."
test/diff \$1 \$2

EOF
fi
echo "Done."

# Create .gitignore
f=.gitignore
echo "Creating $f.."
if [ ! -f $f ]; then
	touch $f

cat > $f << EOF
.vscode/
out/
test/out
EOF
fi
echo "Done."
